{
  "info": {
    "name": "Spana Backend - Clean Database Tests",
    "description": "Test collection for the new clean database structure with separate Customer and ServiceProvider tables",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5003",
      "type": "string"
    },
    {
      "key": "customerToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "providerToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "response": []
    },
    {
      "name": "Detailed Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health/detailed",
          "host": ["{{baseUrl}}"],
          "path": ["health", "detailed"]
        }
      },
      "response": []
    },
    {
      "name": "Register Customer",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('customerToken', response.token);",
              "    console.log('Customer token saved:', response.token);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"Passw0rd123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Customer\",\n  \"phone\": \"+1234567890\",\n  \"role\": \"customer\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "register"]
        }
      },
      "response": []
    },
    {
      "name": "Register Service Provider",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('providerToken', response.token);",
              "    console.log('Provider token saved:', response.token);",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"provider@example.com\",\n  \"password\": \"Passw0rd123!\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Provider\",\n  \"phone\": \"+1234567891\",\n  \"role\": \"service_provider\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "register"]
        }
      },
      "response": []
    },
    {
      "name": "Login Customer",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('customerToken', response.token);",
              "    console.log('Customer login successful, token updated');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"Passw0rd123!\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      },
      "response": []
    },
    {
      "name": "Login Service Provider",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('providerToken', response.token);",
              "    console.log('Provider login successful, token updated');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"provider@example.com\",\n  \"password\": \"Passw0rd123!\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      },
      "response": []
    },
    {
      "name": "Get Current User (Customer)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{customerToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/auth/me",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "me"]
        }
      },
      "response": []
    },
    {
      "name": "Get Current User (Provider)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{providerToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/auth/me",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "me"]
        }
      },
      "response": []
    },
    {
      "name": "Test Invalid Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"wrongpassword\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      },
      "response": []
    },
    {
      "name": "Test Duplicate Registration",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"customer@example.com\",\n  \"password\": \"Passw0rd123!\",\n  \"firstName\": \"Duplicate\",\n  \"lastName\": \"User\",\n  \"phone\": \"+1234567899\",\n  \"role\": \"customer\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "register"]
        }
      },
      "response": []
    }
  ]
}
